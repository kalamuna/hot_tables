<?php
/**
 * @file
 * hot_tables.module
 */

include_once 'hot_tables.features.inc';

/**
 * Implementation of hook_entity_info_alter()
 */
function hot_tables_entity_info_alter(&$entity_info){
  // Basic table
  $entity_info['fieldable_panels_pane']['bundles']['hot_table'] = array(
    'label' => t('Table'),
    'pane category' => t('HotWidgets!'),
    'pane top level' => FALSE,
    'pane icon' => drupal_get_path('module', 'hot_tables') . '/images/icon_table.png',
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/hot-table',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
}
define('PWIDGETS_PATH', drupal_get_path('module','panopoly_widgets'));

/**
 * Implements hook_js_alter().
 * Removing the gross panopoly widgets.
 */
function hot_tables_js_alter(&$javascript){
  $p_widgets_js = PWIDGETS_PATH . '/panopoly-widgets.js';
  if(isset($javascript[$p_widgets_js])){
    unset($javascript[$p_widgets_js]);
  }
}


/**
 * Implements hook_css_alter().
 * Removing the gross panopoly widgets.
 */
function hot_tables_css_alter(&$css){
  $p_widgets_css = PWIDGETS_PATH . '/panopoly-widgets.css';
  if(isset($css[$p_widgets_css])){
    unset($css[$p_widgets_css]);
  }
}


/**
 * Implements hook_theme_registry_alter().
 */
function hot_tables_theme_registry_alter(&$theme_registry){
  $theme_registry['tablefield_view']['function'] =  'hot_tables_tablefield_view';
}

/**
 * Theme function for table view
 */
function hot_tables_tablefield_view($variables) {
  $attributes = array(
    'id' => 'tablefield-' . $variables['delta'],
    'class' => array(
      'tablefield'
    )
  );
  // apply scope property to headers for accessibility
  if (is_array($variables['header'])) {
    foreach($variables['header'] as &$header) {
      $header['scope'] = 'col';
    }
  }
  // If the user has access to the csv export option, display it now.
  $export = '';
  if ($variables['export'] && user_access('export tablefield')) {
    $url = sprintf('tablefield/export/%s/%s/%s/%s/%s', $variables['entity_type'], $variables['entity_id'], $variables['field_name'], $variables['langcode'], $variables['delta']);
    $export = '<div id="tablefield-export-link-' . $variables['delta'] . '" class="tablefield-export-link">' . l(t('Export Table Data'), $url, array('attributes'=> array( 'class' => 'btn btn-xs btn-default', 'role' => 'button'))). '</div>';
  }

  return '<div id="tablefield-wrapper-' . $variables['delta'] . '" class="tablefield-wrapper">'
    . '<div class="table-responsive">'
    . theme('table',
      array(
        'header' => $variables['header'],
        'rows' => $variables['rows'],
        'attributes' => $attributes,
        'caption' => $variables['caption'],
      )
    )
    . '</div>'
    . $export
    . '</div>';
}
